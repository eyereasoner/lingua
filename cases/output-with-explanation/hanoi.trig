@prefix : <https://eyereasoner.github.io/lingua/cases/hanoi.trig#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix math: <http://www.w3.org/2000/10/swap/math#>.
@prefix list: <http://www.w3.org/2000/10/swap/list#>.

(6 :left :right :center) :moves ((:left :center) (:left :right) (:center :right) (:left :center) (:right :left) (:right :center) (:left :center) (:left :right) (:center :right) (:center :left) (:right :left) (:center :right) (:left :center) (:left :right) (:center :right) (:left :center) (:right :left) (:right :center) (:left :center) (:right :left) (:center :right) (:center :left) (:right :left) (:right :center) (:left :center) (:left :right) (:center :right) (:left :center) (:right :left) (:right :center) (:left :center) (:left :right) (:center :right) (:center :left) (:right :left) (:center :right) (:left :center) (:left :right) (:center :right) (:center :left) (:right :left) (:right :center) (:left :center) (:right :left) (:center :right) (:center :left) (:right :left) (:center :right) (:left :center) (:left :right) (:center :right) (:left :center) (:right :left) (:right :center) (:left :center) (:left :right) (:center :right) (:center :left) (:right :left) (:center :right) (:left :center) (:left :right) (:center :right)).

#
# lingua explanation
#

_:bng_1 log:explains _:bng_2.
_:bng_3 log:explains _:bng_4.
_:bng_5 log:explains _:bng_6.
_:bng_7 log:explains _:bng_8.
_:bng_9 log:explains _:bng_10.
_:bng_11 log:explains _:bng_12.
_:bng_13 log:explains _:bng_14.
_:bng_15 log:explains _:bng_16.
_:bng_17 log:explains _:bng_18.
_:bng_19 log:explains _:bng_20.
_:bng_21 log:explains _:bng_22.
_:bng_23 log:explains _:bng_24.

_:bng_1 {
    [] rdf:value 2; math:greaterThan 1 .
    (2 1) math:difference 1 .
    (1 :left :center :right) :moves ((:left :center)).
    (1 :center :right :left) :moves ((:center :right)).
    (((:left :center)) ((:left :right)) ((:center :right))) list:append ((:left :center) (:left :right) (:center :right)).
}

_:bng_2 {
    (2 :left :right :center) :moves ((:left :center) (:left :right) (:center :right)).
}

_:bng_3 {
    [] rdf:value 2; math:greaterThan 1 .
    (2 1) math:difference 1 .
    (1 :right :left :center) :moves ((:right :left)).
    (1 :left :center :right) :moves ((:left :center)).
    (((:right :left)) ((:right :center)) ((:left :center))) list:append ((:right :left) (:right :center) (:left :center)).
}

_:bng_4 {
    (2 :right :center :left) :moves ((:right :left) (:right :center) (:left :center)).
}

_:bng_5 {
    [] rdf:value 3; math:greaterThan 1 .
    (3 1) math:difference 2 .
    (2 :left :right :center) :moves ((:left :center) (:left :right) (:center :right)).
    (2 :right :center :left) :moves ((:right :left) (:right :center) (:left :center)).
    (((:left :center) (:left :right) (:center :right)) ((:left :center)) ((:right :left) (:right :center) (:left :center))) list:append ((:left :center) (:left :right) (:center :right) (:left :center) (:right :left) (:right :center) (:left :center)).
}

_:bng_6 {
    (3 :left :center :right) :moves ((:left :center) (:left :right) (:center :right) (:left :center) (:right :left) (:right :center) (:left :center)).
}

_:bng_7 {
    [] rdf:value 2; math:greaterThan 1 .
    (2 1) math:difference 1 .
    (1 :center :right :left) :moves ((:center :right)).
    (1 :right :left :center) :moves ((:right :left)).
    (((:center :right)) ((:center :left)) ((:right :left))) list:append ((:center :right) (:center :left) (:right :left)).
}

_:bng_8 {
    (2 :center :left :right) :moves ((:center :right) (:center :left) (:right :left)).
}

_:bng_9 {
    [] rdf:value 3; math:greaterThan 1 .
    (3 1) math:difference 2 .
    (2 :center :left :right) :moves ((:center :right) (:center :left) (:right :left)).
    (2 :left :right :center) :moves ((:left :center) (:left :right) (:center :right)).
    (((:center :right) (:center :left) (:right :left)) ((:center :right)) ((:left :center) (:left :right) (:center :right))) list:append ((:center :right) (:center :left) (:right :left) (:center :right) (:left :center) (:left :right) (:center :right)).
}

_:bng_10 {
    (3 :center :right :left) :moves ((:center :right) (:center :left) (:right :left) (:center :right) (:left :center) (:left :right) (:center :right)).
}

_:bng_11 {
    [] rdf:value 4; math:greaterThan 1 .
    (4 1) math:difference 3 .
    (3 :left :center :right) :moves ((:left :center) (:left :right) (:center :right) (:left :center) (:right :left) (:right :center) (:left :center)).
    (3 :center :right :left) :moves ((:center :right) (:center :left) (:right :left) (:center :right) (:left :center) (:left :right) (:center :right)).
    (((:left :center) (:left :right) (:center :right) (:left :center) (:right :left) (:right :center) (:left :center)) ((:left :right)) ((:center :right) (:center :left) (:right :left) (:center :right) (:left :center) (:left :right) (:center :right))) list:append ((:left :center) (:left :right) (:center :right) (:left :center) (:right :left) (:right :center) (:left :center) (:left :right) (:center :right) (:center :left) (:right :left) (:center :right) (:left :center) (:left :right) (:center :right)).
}

_:bng_12 {
    (4 :left :right :center) :moves ((:left :center) (:left :right) (:center :right) (:left :center) (:right :left) (:right :center) (:left :center) (:left :right) (:center :right) (:center :left) (:right :left) (:center :right) (:left :center) (:left :right) (:center :right)).
}

_:bng_13 {
    [] rdf:value 3; math:greaterThan 1 .
    (3 1) math:difference 2 .
    (2 :right :center :left) :moves ((:right :left) (:right :center) (:left :center)).
    (2 :center :left :right) :moves ((:center :right) (:center :left) (:right :left)).
    (((:right :left) (:right :center) (:left :center)) ((:right :left)) ((:center :right) (:center :left) (:right :left))) list:append ((:right :left) (:right :center) (:left :center) (:right :left) (:center :right) (:center :left) (:right :left)).
}

_:bng_14 {
    (3 :right :left :center) :moves ((:right :left) (:right :center) (:left :center) (:right :left) (:center :right) (:center :left) (:right :left)).
}

_:bng_15 {
    [] rdf:value 4; math:greaterThan 1 .
    (4 1) math:difference 3 .
    (3 :right :left :center) :moves ((:right :left) (:right :center) (:left :center) (:right :left) (:center :right) (:center :left) (:right :left)).
    (3 :left :center :right) :moves ((:left :center) (:left :right) (:center :right) (:left :center) (:right :left) (:right :center) (:left :center)).
    (((:right :left) (:right :center) (:left :center) (:right :left) (:center :right) (:center :left) (:right :left)) ((:right :center)) ((:left :center) (:left :right) (:center :right) (:left :center) (:right :left) (:right :center) (:left :center))) list:append ((:right :left) (:right :center) (:left :center) (:right :left) (:center :right) (:center :left) (:right :left) (:right :center) (:left :center) (:left :right) (:center :right) (:left :center) (:right :left) (:right :center) (:left :center)).
}

_:bng_16 {
    (4 :right :center :left) :moves ((:right :left) (:right :center) (:left :center) (:right :left) (:center :right) (:center :left) (:right :left) (:right :center) (:left :center) (:left :right) (:center :right) (:left :center) (:right :left) (:right :center) (:left :center)).
}

_:bng_17 {
    [] rdf:value 5; math:greaterThan 1 .
    (5 1) math:difference 4 .
    (4 :left :right :center) :moves ((:left :center) (:left :right) (:center :right) (:left :center) (:right :left) (:right :center) (:left :center) (:left :right) (:center :right) (:center :left) (:right :left) (:center :right) (:left :center) (:left :right) (:center :right)).
    (4 :right :center :left) :moves ((:right :left) (:right :center) (:left :center) (:right :left) (:center :right) (:center :left) (:right :left) (:right :center) (:left :center) (:left :right) (:center :right) (:left :center) (:right :left) (:right :center) (:left :center)).
    (((:left :center) (:left :right) (:center :right) (:left :center) (:right :left) (:right :center) (:left :center) (:left :right) (:center :right) (:center :left) (:right :left) (:center :right) (:left :center) (:left :right) (:center :right)) ((:left :center)) ((:right :left) (:right :center) (:left :center) (:right :left) (:center :right) (:center :left) (:right :left) (:right :center) (:left :center) (:left :right) (:center :right) (:left :center) (:right :left) (:right :center) (:left :center))) list:append ((:left :center) (:left :right) (:center :right) (:left :center) (:right :left) (:right :center) (:left :center) (:left :right) (:center :right) (:center :left) (:right :left) (:center :right) (:left :center) (:left :right) (:center :right) (:left :center) (:right :left) (:right :center) (:left :center) (:right :left) (:center :right) (:center :left) (:right :left) (:right :center) (:left :center) (:left :right) (:center :right) (:left :center) (:right :left) (:right :center) (:left :center)).
}

_:bng_18 {
    (5 :left :center :right) :moves ((:left :center) (:left :right) (:center :right) (:left :center) (:right :left) (:right :center) (:left :center) (:left :right) (:center :right) (:center :left) (:right :left) (:center :right) (:left :center) (:left :right) (:center :right) (:left :center) (:right :left) (:right :center) (:left :center) (:right :left) (:center :right) (:center :left) (:right :left) (:right :center) (:left :center) (:left :right) (:center :right) (:left :center) (:right :left) (:right :center) (:left :center)).
}

_:bng_19 {
    [] rdf:value 4; math:greaterThan 1 .
    (4 1) math:difference 3 .
    (3 :center :right :left) :moves ((:center :right) (:center :left) (:right :left) (:center :right) (:left :center) (:left :right) (:center :right)).
    (3 :right :left :center) :moves ((:right :left) (:right :center) (:left :center) (:right :left) (:center :right) (:center :left) (:right :left)).
    (((:center :right) (:center :left) (:right :left) (:center :right) (:left :center) (:left :right) (:center :right)) ((:center :left)) ((:right :left) (:right :center) (:left :center) (:right :left) (:center :right) (:center :left) (:right :left))) list:append ((:center :right) (:center :left) (:right :left) (:center :right) (:left :center) (:left :right) (:center :right) (:center :left) (:right :left) (:right :center) (:left :center) (:right :left) (:center :right) (:center :left) (:right :left)).
}

_:bng_20 {
    (4 :center :left :right) :moves ((:center :right) (:center :left) (:right :left) (:center :right) (:left :center) (:left :right) (:center :right) (:center :left) (:right :left) (:right :center) (:left :center) (:right :left) (:center :right) (:center :left) (:right :left)).
}

_:bng_21 {
    [] rdf:value 5; math:greaterThan 1 .
    (5 1) math:difference 4 .
    (4 :center :left :right) :moves ((:center :right) (:center :left) (:right :left) (:center :right) (:left :center) (:left :right) (:center :right) (:center :left) (:right :left) (:right :center) (:left :center) (:right :left) (:center :right) (:center :left) (:right :left)).
    (4 :left :right :center) :moves ((:left :center) (:left :right) (:center :right) (:left :center) (:right :left) (:right :center) (:left :center) (:left :right) (:center :right) (:center :left) (:right :left) (:center :right) (:left :center) (:left :right) (:center :right)).
    (((:center :right) (:center :left) (:right :left) (:center :right) (:left :center) (:left :right) (:center :right) (:center :left) (:right :left) (:right :center) (:left :center) (:right :left) (:center :right) (:center :left) (:right :left)) ((:center :right)) ((:left :center) (:left :right) (:center :right) (:left :center) (:right :left) (:right :center) (:left :center) (:left :right) (:center :right) (:center :left) (:right :left) (:center :right) (:left :center) (:left :right) (:center :right))) list:append ((:center :right) (:center :left) (:right :left) (:center :right) (:left :center) (:left :right) (:center :right) (:center :left) (:right :left) (:right :center) (:left :center) (:right :left) (:center :right) (:center :left) (:right :left) (:center :right) (:left :center) (:left :right) (:center :right) (:left :center) (:right :left) (:right :center) (:left :center) (:left :right) (:center :right) (:center :left) (:right :left) (:center :right) (:left :center) (:left :right) (:center :right)).
}

_:bng_22 {
    (5 :center :right :left) :moves ((:center :right) (:center :left) (:right :left) (:center :right) (:left :center) (:left :right) (:center :right) (:center :left) (:right :left) (:right :center) (:left :center) (:right :left) (:center :right) (:center :left) (:right :left) (:center :right) (:left :center) (:left :right) (:center :right) (:left :center) (:right :left) (:right :center) (:left :center) (:left :right) (:center :right) (:center :left) (:right :left) (:center :right) (:left :center) (:left :right) (:center :right)).
}

_:bng_23 {
    [] rdf:value 6; math:greaterThan 1 .
    (6 1) math:difference 5 .
    (5 :left :center :right) :moves ((:left :center) (:left :right) (:center :right) (:left :center) (:right :left) (:right :center) (:left :center) (:left :right) (:center :right) (:center :left) (:right :left) (:center :right) (:left :center) (:left :right) (:center :right) (:left :center) (:right :left) (:right :center) (:left :center) (:right :left) (:center :right) (:center :left) (:right :left) (:right :center) (:left :center) (:left :right) (:center :right) (:left :center) (:right :left) (:right :center) (:left :center)).
    (5 :center :right :left) :moves ((:center :right) (:center :left) (:right :left) (:center :right) (:left :center) (:left :right) (:center :right) (:center :left) (:right :left) (:right :center) (:left :center) (:right :left) (:center :right) (:center :left) (:right :left) (:center :right) (:left :center) (:left :right) (:center :right) (:left :center) (:right :left) (:right :center) (:left :center) (:left :right) (:center :right) (:center :left) (:right :left) (:center :right) (:left :center) (:left :right) (:center :right)).
    (((:left :center) (:left :right) (:center :right) (:left :center) (:right :left) (:right :center) (:left :center) (:left :right) (:center :right) (:center :left) (:right :left) (:center :right) (:left :center) (:left :right) (:center :right) (:left :center) (:right :left) (:right :center) (:left :center) (:right :left) (:center :right) (:center :left) (:right :left) (:right :center) (:left :center) (:left :right) (:center :right) (:left :center) (:right :left) (:right :center) (:left :center)) ((:left :right)) ((:center :right) (:center :left) (:right :left) (:center :right) (:left :center) (:left :right) (:center :right) (:center :left) (:right :left) (:right :center) (:left :center) (:right :left) (:center :right) (:center :left) (:right :left) (:center :right) (:left :center) (:left :right) (:center :right) (:left :center) (:right :left) (:right :center) (:left :center) (:left :right) (:center :right) (:center :left) (:right :left) (:center :right) (:left :center) (:left :right) (:center :right))) list:append ((:left :center) (:left :right) (:center :right) (:left :center) (:right :left) (:right :center) (:left :center) (:left :right) (:center :right) (:center :left) (:right :left) (:center :right) (:left :center) (:left :right) (:center :right) (:left :center) (:right :left) (:right :center) (:left :center) (:right :left) (:center :right) (:center :left) (:right :left) (:right :center) (:left :center) (:left :right) (:center :right) (:left :center) (:right :left) (:right :center) (:left :center) (:left :right) (:center :right) (:center :left) (:right :left) (:center :right) (:left :center) (:left :right) (:center :right) (:center :left) (:right :left) (:right :center) (:left :center) (:right :left) (:center :right) (:center :left) (:right :left) (:center :right) (:left :center) (:left :right) (:center :right) (:left :center) (:right :left) (:right :center) (:left :center) (:left :right) (:center :right) (:center :left) (:right :left) (:center :right) (:left :center) (:left :right) (:center :right)).
}

_:bng_24 {
    (6 :left :right :center) :moves ((:left :center) (:left :right) (:center :right) (:left :center) (:right :left) (:right :center) (:left :center) (:left :right) (:center :right) (:center :left) (:right :left) (:center :right) (:left :center) (:left :right) (:center :right) (:left :center) (:right :left) (:right :center) (:left :center) (:right :left) (:center :right) (:center :left) (:right :left) (:right :center) (:left :center) (:left :right) (:center :right) (:left :center) (:right :left) (:right :center) (:left :center) (:left :right) (:center :right) (:center :left) (:right :left) (:center :right) (:left :center) (:left :right) (:center :right) (:center :left) (:right :left) (:right :center) (:left :center) (:right :left) (:center :right) (:center :left) (:right :left) (:center :right) (:left :center) (:left :right) (:center :right) (:left :center) (:right :left) (:right :center) (:left :center) (:left :right) (:center :right) (:center :left) (:right :left) (:center :right) (:left :center) (:left :right) (:center :right)).
}
