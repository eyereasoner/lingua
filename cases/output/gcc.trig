PREFIX : <https://eyereasoner.github.io/lingua/cases/gcc.trig#>
PREFIX log: <http://www.w3.org/2000/10/swap/log#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX list: <http://www.w3.org/2000/10/swap/list#>

((1 1 1 1 1 1 1 1 1) (0 0 0)) :testgcc ((0 0 1) (0 1 1) (0 1 0) (1 1 0) (1 1 1) (1 0 1) (1 0 0) (0 0 0) (0 0 1)).

#
# lingua explanation
#

_:bng_1 log:explanation _:bng_2.
_:bng_3 log:explanation _:bng_4.
_:bng_5 log:explanation _:bng_6.
_:bng_7 log:explanation _:bng_8.
_:bng_9 log:explanation _:bng_10.
_:bng_11 log:explanation _:bng_12.
_:bng_13 log:explanation _:bng_14.
_:bng_15 log:explanation _:bng_16.
_:bng_17 log:explanation _:bng_18.
_:bng_19 log:explanation _:bng_20.
_:bng_21 log:explanation _:bng_22.
_:bng_23 log:explanation _:bng_24.
_:bng_25 log:explanation _:bng_26.
_:bng_27 log:explanation _:bng_28.
_:bng_29 log:explanation _:bng_30.
_:bng_31 log:explanation _:bng_32.
_:bng_33 log:explanation _:bng_34.
_:bng_35 log:explanation _:bng_36.
_:bng_37 log:explanation _:bng_38.
_:bng_39 log:explanation _:bng_40.
_:bng_41 log:explanation _:bng_42.
_:bng_43 log:explanation _:bng_44.
_:bng_45 log:explanation _:bng_46.
_:bng_47 log:explanation _:bng_48.
_:bng_49 log:explanation _:bng_50.
_:bng_51 log:explanation _:bng_52.
_:bng_53 log:explanation _:bng_54.
_:bng_55 log:explanation _:bng_56.
_:bng_57 log:explanation _:bng_58.

GRAPH _:bng_1 {
    (0 0) :and 0 .
    [] rdf:value 0; :inv 1 .
    (0 1) :and 0 .
    [] rdf:value 0; :inv 1 .
    (1 0) :and 0 .
    (0 0) :or 0 .
    (0 0) :or 0.
}

GRAPH _:bng_2 {
    (0 0 0) :netb (0 0).
}

GRAPH _:bng_3 {
    (0 0) :and 0 .
    [] rdf:value 0; :inv 1 .
    [] rdf:value 0; :inv 1 .
    (1 1) :and 1 .
    (0 1) :or 1.
}

GRAPH _:bng_4 {
    (0 0) :neta 1.
}

GRAPH _:bng_5 {
    (0 0 0) :netb (0 0).
    (0 0) :neta 1 .
    (0 1 0) :dff 0 .
    (0 1 0) :dff 0 .
    (1 1 0) :dff 1.
}

GRAPH _:bng_6 {
    (1 (0 0 0)) :gcc (0 0 1).
}

GRAPH _:bng_7 {
    (0 1) :and 0 .
    [] rdf:value 1; :inv 0 .
    (0 0) :and 0 .
    [] rdf:value 0; :inv 1 .
    (1 1) :and 1 .
    (0 0) :or 0 .
    (0 1) :or 1.
}

GRAPH _:bng_8 {
    (0 0 1) :netb (0 1).
}

GRAPH _:bng_9 {
    (0 0 1) :netb (0 1).
    (0 0) :neta 1 .
    (0 1 0) :dff 0 .
    (1 1 0) :dff 1 .
    (1 1 1) :dff 1.
}

GRAPH _:bng_10 {
    (1 (0 0 1)) :gcc (0 1 1).
}

GRAPH _:bng_11 {
    (0 1) :and 0 .
    [] rdf:value 1; :inv 0 .
    (1 0) :and 0 .
    [] rdf:value 0; :inv 1 .
    (1 1) :and 1 .
    (0 0) :or 0 .
    (0 1) :or 1.
}

GRAPH _:bng_12 {
    (0 1 1) :netb (0 1).
}

GRAPH _:bng_13 {
    (0 1) :and 0 .
    [] rdf:value 0; :inv 1 .
    [] rdf:value 1; :inv 0 .
    (1 0) :and 0 .
    (0 0) :or 0.
}

GRAPH _:bng_14 {
    (0 1) :neta 0.
}

GRAPH _:bng_15 {
    (0 1 1) :netb (0 1).
    (0 1) :neta 0 .
    (0 1 0) :dff 0 .
    (1 1 1) :dff 1 .
    (0 1 1) :dff 0.
}

GRAPH _:bng_16 {
    (1 (0 1 1)) :gcc (0 1 0).
}

GRAPH _:bng_17 {
    (0 0) :and 0 .
    [] rdf:value 0; :inv 1 .
    (1 1) :and 1 .
    [] rdf:value 0; :inv 1 .
    (1 0) :and 0 .
    (0 1) :or 1 .
    (1 0) :or 1.
}

GRAPH _:bng_18 {
    (0 1 0) :netb (1 1).
}

GRAPH _:bng_19 {
    (0 1 0) :netb (1 1).
    (0 1) :neta 0 .
    (1 1 0) :dff 1 .
    (1 1 1) :dff 1 .
    (0 1 0) :dff 0.
}

GRAPH _:bng_20 {
    (1 (0 1 0)) :gcc (1 1 0).
}

GRAPH _:bng_21 {
    (1 0) :and 0 .
    [] rdf:value 0; :inv 1 .
    (1 1) :and 1 .
    [] rdf:value 1; :inv 0 .
    (0 0) :and 0 .
    (0 1) :or 1 .
    (1 0) :or 1.
}

GRAPH _:bng_22 {
    (1 1 0) :netb (1 1).
}

GRAPH _:bng_23 {
    (1 1) :and 1 .
    [] rdf:value 1; :inv 0 .
    [] rdf:value 1; :inv 0 .
    (0 0) :and 0 .
    (1 0) :or 1.
}

GRAPH _:bng_24 {
    (1 1) :neta 1.
}

GRAPH _:bng_25 {
    (1 1 0) :netb (1 1).
    (1 1) :neta 1 .
    (1 1 1) :dff 1 .
    (1 1 1) :dff 1 .
    (1 1 0) :dff 1.
}

GRAPH _:bng_26 {
    (1 (1 1 0)) :gcc (1 1 1).
}

GRAPH _:bng_27 {
    (1 1) :and 1 .
    [] rdf:value 1; :inv 0 .
    (1 0) :and 0 .
    [] rdf:value 1; :inv 0 .
    (0 1) :and 0 .
    (1 0) :or 1 .
    (0 0) :or 0.
}

GRAPH _:bng_28 {
    (1 1 1) :netb (1 0).
}

GRAPH _:bng_29 {
    (1 1 1) :netb (1 0).
    (1 1) :neta 1 .
    (1 1 1) :dff 1 .
    (0 1 1) :dff 0 .
    (1 1 1) :dff 1.
}

GRAPH _:bng_30 {
    (1 (1 1 1)) :gcc (1 0 1).
}

GRAPH _:bng_31 {
    (1 1) :and 1 .
    [] rdf:value 1; :inv 0 .
    (0 0) :and 0 .
    [] rdf:value 1; :inv 0 .
    (0 1) :and 0 .
    (1 0) :or 1 .
    (0 0) :or 0.
}

GRAPH _:bng_32 {
    (1 0 1) :netb (1 0).
}

GRAPH _:bng_33 {
    (1 0) :and 0 .
    [] rdf:value 1; :inv 0 .
    [] rdf:value 0; :inv 1 .
    (0 1) :and 0 .
    (0 0) :or 0.
}

GRAPH _:bng_34 {
    (1 0) :neta 0.
}

GRAPH _:bng_35 {
    (1 0 1) :netb (1 0).
    (1 0) :neta 0 .
    (1 1 1) :dff 1 .
    (0 1 0) :dff 0 .
    (0 1 1) :dff 0.
}

GRAPH _:bng_36 {
    (1 (1 0 1)) :gcc (1 0 0).
}

GRAPH _:bng_37 {
    (1 0) :and 0 .
    [] rdf:value 0; :inv 1 .
    (0 1) :and 0 .
    [] rdf:value 1; :inv 0 .
    (0 0) :and 0 .
    (0 0) :or 0 .
    (0 0) :or 0.
}

GRAPH _:bng_38 {
    (1 0 0) :netb (0 0).
}

GRAPH _:bng_39 {
    (1 0 0) :netb (0 0).
    (1 0) :neta 0 .
    (0 1 1) :dff 0 .
    (0 1 0) :dff 0 .
    (0 1 0) :dff 0.
}

GRAPH _:bng_40 {
    (1 (1 0 0)) :gcc (0 0 0).
}

GRAPH _:bng_41 {
    (1) list:firstRest (1 ()).
    ((0 0 1)) list:firstRest ((0 0 1) ()).
    (1 (0 0 0)) :gcc (0 0 1).
    (() (0 0 1)) :testgcc ().
}

GRAPH _:bng_42 {
    ((1) (0 0 0)) :testgcc ((0 0 1)).
}

GRAPH _:bng_43 {
    (1 1) list:firstRest (1 (1)).
    ((0 0 0) (0 0 1)) list:firstRest ((0 0 0) ((0 0 1))).
    (1 (1 0 0)) :gcc (0 0 0).
    ((1) (0 0 0)) :testgcc ((0 0 1)).
}

GRAPH _:bng_44 {
    ((1 1) (1 0 0)) :testgcc ((0 0 0) (0 0 1)).
}

GRAPH _:bng_45 {
    (1 1 1) list:firstRest (1 (1 1)).
    ((1 0 0) (0 0 0) (0 0 1)) list:firstRest ((1 0 0) ((0 0 0) (0 0 1))).
    (1 (1 0 1)) :gcc (1 0 0).
    ((1 1) (1 0 0)) :testgcc ((0 0 0) (0 0 1)).
}

GRAPH _:bng_46 {
    ((1 1 1) (1 0 1)) :testgcc ((1 0 0) (0 0 0) (0 0 1)).
}

GRAPH _:bng_47 {
    (1 1 1 1) list:firstRest (1 (1 1 1)).
    ((1 0 1) (1 0 0) (0 0 0) (0 0 1)) list:firstRest ((1 0 1) ((1 0 0) (0 0 0) (0 0 1))).
    (1 (1 1 1)) :gcc (1 0 1).
    ((1 1 1) (1 0 1)) :testgcc ((1 0 0) (0 0 0) (0 0 1)).
}

GRAPH _:bng_48 {
    ((1 1 1 1) (1 1 1)) :testgcc ((1 0 1) (1 0 0) (0 0 0) (0 0 1)).
}

GRAPH _:bng_49 {
    (1 1 1 1 1) list:firstRest (1 (1 1 1 1)).
    ((1 1 1) (1 0 1) (1 0 0) (0 0 0) (0 0 1)) list:firstRest ((1 1 1) ((1 0 1) (1 0 0) (0 0 0) (0 0 1))).
    (1 (1 1 0)) :gcc (1 1 1).
    ((1 1 1 1) (1 1 1)) :testgcc ((1 0 1) (1 0 0) (0 0 0) (0 0 1)).
}

GRAPH _:bng_50 {
    ((1 1 1 1 1) (1 1 0)) :testgcc ((1 1 1) (1 0 1) (1 0 0) (0 0 0) (0 0 1)).
}

GRAPH _:bng_51 {
    (1 1 1 1 1 1) list:firstRest (1 (1 1 1 1 1)).
    ((1 1 0) (1 1 1) (1 0 1) (1 0 0) (0 0 0) (0 0 1)) list:firstRest ((1 1 0) ((1 1 1) (1 0 1) (1 0 0) (0 0 0) (0 0 1))).
    (1 (0 1 0)) :gcc (1 1 0).
    ((1 1 1 1 1) (1 1 0)) :testgcc ((1 1 1) (1 0 1) (1 0 0) (0 0 0) (0 0 1)).
}

GRAPH _:bng_52 {
    ((1 1 1 1 1 1) (0 1 0)) :testgcc ((1 1 0) (1 1 1) (1 0 1) (1 0 0) (0 0 0) (0 0 1)).
}

GRAPH _:bng_53 {
    (1 1 1 1 1 1 1) list:firstRest (1 (1 1 1 1 1 1)).
    ((0 1 0) (1 1 0) (1 1 1) (1 0 1) (1 0 0) (0 0 0) (0 0 1)) list:firstRest ((0 1 0) ((1 1 0) (1 1 1) (1 0 1) (1 0 0) (0 0 0) (0 0 1))).
    (1 (0 1 1)) :gcc (0 1 0).
    ((1 1 1 1 1 1) (0 1 0)) :testgcc ((1 1 0) (1 1 1) (1 0 1) (1 0 0) (0 0 0) (0 0 1)).
}

GRAPH _:bng_54 {
    ((1 1 1 1 1 1 1) (0 1 1)) :testgcc ((0 1 0) (1 1 0) (1 1 1) (1 0 1) (1 0 0) (0 0 0) (0 0 1)).
}

GRAPH _:bng_55 {
    (1 1 1 1 1 1 1 1) list:firstRest (1 (1 1 1 1 1 1 1)).
    ((0 1 1) (0 1 0) (1 1 0) (1 1 1) (1 0 1) (1 0 0) (0 0 0) (0 0 1)) list:firstRest ((0 1 1) ((0 1 0) (1 1 0) (1 1 1) (1 0 1) (1 0 0) (0 0 0) (0 0 1))).
    (1 (0 0 1)) :gcc (0 1 1).
    ((1 1 1 1 1 1 1) (0 1 1)) :testgcc ((0 1 0) (1 1 0) (1 1 1) (1 0 1) (1 0 0) (0 0 0) (0 0 1)).
}

GRAPH _:bng_56 {
    ((1 1 1 1 1 1 1 1) (0 0 1)) :testgcc ((0 1 1) (0 1 0) (1 1 0) (1 1 1) (1 0 1) (1 0 0) (0 0 0) (0 0 1)).
}

GRAPH _:bng_57 {
    (1 1 1 1 1 1 1 1 1) list:firstRest (1 (1 1 1 1 1 1 1 1)).
    ((0 0 1) (0 1 1) (0 1 0) (1 1 0) (1 1 1) (1 0 1) (1 0 0) (0 0 0) (0 0 1)) list:firstRest ((0 0 1) ((0 1 1) (0 1 0) (1 1 0) (1 1 1) (1 0 1) (1 0 0) (0 0 0) (0 0 1))).
    (1 (0 0 0)) :gcc (0 0 1).
    ((1 1 1 1 1 1 1 1) (0 0 1)) :testgcc ((0 1 1) (0 1 0) (1 1 0) (1 1 1) (1 0 1) (1 0 0) (0 0 0) (0 0 1)).
}

GRAPH _:bng_58 {
    ((1 1 1 1 1 1 1 1 1) (0 0 0)) :testgcc ((0 0 1) (0 1 1) (0 1 0) (1 1 0) (1 1 1) (1 0 1) (1 0 0) (0 0 0) (0 0 1)).
}
