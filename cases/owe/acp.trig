PREFIX : <https://eyereasoner.github.io/lingua/cases/acp.trig#>
PREFIX log: <http://www.w3.org/2000/10/swap/log#>
PREFIX var: <http://www.w3.org/2000/10/swap/var#>
PREFIX list: <http://www.w3.org/2000/10/swap/list#>

:test :for :PolicyX.
:test :is true.

#
# lingua explanation
#

_:bng_1 log:explains _:bng_2.
_:bng_3 log:explains _:bng_4.
_:bng_5 log:explains _:bng_6.
_:bng_7 log:explains _:bng_8.

GRAPH _:bng_1 {
    :test1 :policy :PolicyX.
    :PolicyX a :Policy.
    (_:bng_9 _:bng_10) log:forAllIn ((<https://eyereasoner.github.io/lingua/cases/acp.trig>) 1).
}

GRAPH _:bng_2 {
    :PolicyX :pass :allOfTest.
}

GRAPH _:bng_3 {
    :test1 :policy :PolicyX.
    :PolicyX a :Policy.
    (var:x_0 _:bng_11 (:C)) log:collectAllIn ((<https://eyereasoner.github.io/lingua/cases/acp.trig>) 1).
    (:C) list:length 1 .
    (1) log:notEqualTo (0).
}

GRAPH _:bng_4 {
    :PolicyX :pass :anyOfTest.
}

GRAPH _:bng_5 {
    :test1 :policy :PolicyX.
    :PolicyX a :Policy.
    (var:x_0 _:bng_12 ()) log:collectAllIn ((<https://eyereasoner.github.io/lingua/cases/acp.trig>) 1).
    () list:length 0 .
    (0) log:equalTo (0).
}

GRAPH _:bng_6 {
    :PolicyX :pass :noneOfTest.
}

GRAPH _:bng_7 {
    :PolicyX a :Policy.
    :PolicyX :pass :allOfTest.
    :PolicyX :pass :anyOfTest.
    :PolicyX :pass :noneOfTest.
}

GRAPH _:bng_8 {
    :test :for :PolicyX.
    :test :is true.
}

GRAPH _:bng_9 {
    :PolicyX :allOf var:x_0.
}

GRAPH _:bng_10 {
    :test1 :has var:x_0.
}

GRAPH _:bng_11 {
    :PolicyX :anyOf var:x_0.
    :test1 :has var:x_0.
}

GRAPH _:bng_12 {
    :PolicyX :noneOf var:x_0.
    :test1 :has var:x_0.
}
